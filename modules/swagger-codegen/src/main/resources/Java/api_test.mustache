{{>licenseInfo}}

package {{package}};

import {{invokerPackage}}.ApiException;
{{#imports}}import {{import}};
{{/imports}}
import org.junit.Test;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}
{{#useBeanValidation}}
import javax.validation.Validation;
import javax.validation.Validator;
{{/useBeanValidation}}

/**
 * API tests for {{classname}}
 */
public class {{classname}}Test {

    private final {{classname}} api = new {{classname}}();

    {{#operations}}{{#operation}}
    /**
     * {{summary}}
     *
     * {{notes}}
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void {{operationId}}Test() throws ApiException {
        {{#allParams}}
        {{{dataType}}} {{paramName}} = null;
        {{/allParams}}
        // {{#returnType}}{{{returnType}}} response = {{/returnType}}api.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
    }
    {{#useBeanValidation}}

    /**
     * Validates all parameter for {{operationId}} using bean validation.
     */
    @Test
    public void {{operationId}}ValidationTest() {
        Validator validator = Validation.buildDefaultValidatorFactory().getValidator();
        {{#bodyParams}}
        {{^isPrimitiveType}}
        {{{dataType}}} {{paramName}} = null;
        // assert validator.validate({{paramName}}).size() == 0;
        {{/isPrimitiveType}}
        {{/bodyParams}}
    }
    {{/useBeanValidation}}

    {{/operation}}{{/operations}}
}
